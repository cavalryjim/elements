--- !ruby/object:Gem::Specification 
name: ancestry
version: !ruby/object:Gem::Version 
  hash: 31
  prerelease: false
  segments: 
  - 1
  - 2
  - 0
  version: 1.2.0
platform: ruby
authors: 
- Stefan Kroes
autorequire: 
bindir: bin
cert_chain: []

date: 2010-01-26 00:00:00 +00:00
default_executable: 
dependencies: 
- !ruby/object:Gem::Dependency 
  name: activerecord
  prerelease: false
  requirement: &id001 !ruby/object:Gem::Requirement 
    none: false
    requirements: 
    - - ">="
      - !ruby/object:Gem::Version 
        hash: 11
        segments: 
        - 2
        - 1
        - 0
        version: 2.1.0
  type: :runtime
  version_requirements: *id001
description: Organise ActiveRecord model into a tree structure
email: s.a.kroes@gmail.com
executables: []

extensions: []

extra_rdoc_files: []

files: 
- ancestry.gemspec
- init.rb
- install.rb
- lib/ancestry/class_methods.rb
- lib/ancestry/exceptions.rb
- lib/ancestry/has_ancestry.rb
- lib/ancestry/instance_methods.rb
- lib/ancestry.rb
- test/ancestry_plugin.sqlite3.db
- test/database.yml
- test/debug.log
- test/has_ancestry_test.rb
- test/schema.rb
- test/test_helper.rb
- Rakefile
- MIT-LICENSE
- README.rdoc
has_rdoc: true
homepage: http://github.com/stefankroes/ancestry
licenses: []

post_install_message: 
rdoc_options: []

require_paths: 
- lib
required_ruby_version: !ruby/object:Gem::Requirement 
  none: false
  requirements: 
  - - ">="
    - !ruby/object:Gem::Version 
      hash: 3
      segments: 
      - 0
      version: "0"
required_rubygems_version: !ruby/object:Gem::Requirement 
  none: false
  requirements: 
  - - ">="
    - !ruby/object:Gem::Version 
      hash: 3
      segments: 
      - 0
      version: "0"
requirements: []

rubyforge_project: 
rubygems_version: 1.3.7
signing_key: 
specification_version: 3
summary: Ancestry allows the records of a ActiveRecord model to be organised in a tree structure, using a single, intuitively formatted database column. It exposes all the standard tree structure relations (ancestors, parent, root, children, siblings, descendants) and all of them can be fetched in a single sql query. Additional features are named_scopes, integrity checking, integrity restoration, arrangement of (sub)tree into hashes and different strategies for dealing with orphaned records.
test_files: []

